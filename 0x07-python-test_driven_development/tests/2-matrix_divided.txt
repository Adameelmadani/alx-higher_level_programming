	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
	[[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
	>>> matrix_divided(None, None)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided(20, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([20, 8, 38], 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[3, 9], ["Hello"]], 0)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[2, 3, 8], [3, 9]], 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size
	>>> matrix_divided([[2, 8], [4, 3]], "Hel")
	Traceback (most recent call last):
		...
	TypeError: div must be a number
